
.sections {
  position: relative;
  z-index: 2;

  .animated-section {
    transition: $t-page-opacity;
  }
}

@mixin color-backgrounds($prefix) {
  display: block;

  // Minimill Hero
  .#{$prefix}-work-hero { background-color: $blue; }

  // The footer at the bottom of every page
  .#{$prefix}-footer,
  [class*="#{$prefix}"][class*="related"],
  .#{$prefix}-work-identities { background-color: $light-gray; }

  // Fin
  .#{$prefix}-fin-hero,
  .#{$prefix}-work-fin { background-color: $fin-blue; }

  .#{$prefix}-fin-goal { background-color: $fin-black; }

  // World After Capital
  .#{$prefix}-work-wac { background-color: $wac-yellow; }

  // Redspread
  .#{$prefix}-work-redspread { background-color: $redspread-red; }

  // Unscan
  .#{$prefix}-work-unscan { background-color: $unscan-gold; }

  // Upchannel
  .#{$prefix}-work-upchannel {
    background-color: $upchannel-white;
    overflow: hidden;
    position: relative;

    &:before {
      animation: $a-upchannel-shift;
      background-image: url('../img/pattern-trans.png');
      background-repeat: repeat;
      background-size: 12rem 12rem;
      bottom: 0;
      content: '';
      left: -12rem;
      opacity: 0.1;
      position: absolute;
      right: -12rem;
      top: 0;
      z-index: 1;
    }
  }
}

.backgrounds {
  @include color-backgrounds('background');
  bottom: 0;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 1;

  li {
    height: 100%;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    transition: $t-scroll-opacity;
    width: 100%;
  }
}

// Change background-color of body for the overscroll on the bottom
// of the page.
.in-section-fin-related,
.in-section-work-identities,
.in-section-footer {
  background-color: $light-gray;
}

@function contains($list, $var) {
  $_out: false;
  @each $item in $list { @if $item == $var { $_out: true; } }
  @return $_out;
}

@mixin section($id) {
  @if contains(('work-hero'), $id) {
    p, .h1 { color: $white; }
    .arrow-component { background-color: $white; }

  } @else if contains(('fin-hero', 'fin-goal', 'work-fin'), $id) {
    p, .h1 { color: $fin-white; }
    .arrow-component { background-color: $fin-light-blue;}

  } @else if contains(('work-wac'), $id) {
    p, .h1 { color: $wac-black; }
    .arrow-component { background-color: $wac-blue; }

  } @else if contains(('work-upchannel'), $id) {
    p, .h1 { color: $upchannel-black; }
    .arrow-component { background-color: $upchannel-blue; }

  } @else if contains(('work-unscan'), $id) {
    p, .h1 { color: $unscan-black; }
    .arrow-component { background-color: $unscan-blue; }

  } @else if contains(('footer', 'fin-related', 'work-identities'), $id) {
    p, .h1 { color: $dark-gray; }
    .arrow-component { background-color: $dark-gray; }

  }
}

// List of sections, IN ORDER!
$projects: 'wac', 'fin', 'upchannel', 'unscan';
$work-sections: 'work-hero', 'work-wac', 'work-fin', 'work-upchannel', 'work-unscan', 'work-identities', 'footer';
$fin-sections: 'fin-hero', 'fin-goal', 'fin-related', 'footer';
$sections: $work-sections, $fin-sections;

@each $page in $sections {
  // If you're in $current-section, that section, and the sections above and
  // below it, should all be styled like %section-#{$current-section}
  @each $current-section in $page {
    // Compute the current index
    $index: index($page, $current-section);

    .in-section-#{$current-section} {
      .background-#{$current-section} {
        opacity: 1;
      }

      // Section above $current-section, if it exists.
      .section-#{if($index > 1, nth($page, $index - 1), $current-section)},
      // Section below $current-section, if it exists.
      .section-#{if($index < length($page), nth($page, $index + 1), $current-section)},
      // $current-section
      .section-#{$current-section} {
        @include section($current-section);
      }
    }
  }
}

@media screen and (max-width: $phone-landscape-max) {
  .sections {
    @include color-backgrounds('section');
  }

  @each $page in $sections {
    @each $current-section in $page {
      .section-#{$current-section} {
        @include section($current-section);
      }
    }
  }

  .backgrounds {
    display: none;
  }
}


